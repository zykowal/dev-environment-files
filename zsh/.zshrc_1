# ============================================================================
# OPTIMIZED ZSHRC CONFIGURATION
# ============================================================================

# Path to your oh-my-zsh installation.
export ZSH=$HOME/.oh-my-zsh

# Disable automatic updates to speed up startup
zstyle ':omz:update' mode disabled

# Load only essential plugins (removed web-search which is rarely used)
plugins=(git zsh-autosuggestions zsh-syntax-highlighting)

# Load oh-my-zsh
source $ZSH/oh-my-zsh.sh

# ============================================================================
# PATH CONFIGURATION
# ============================================================================
export PATH="/opt/homebrew/opt/openjdk@17/bin:$PATH"
export PATH="/opt/homebrew/opt/go/bin:$PATH"
export PATH="/opt/homebrew/opt/curl/bin:$PATH"
export PATH="/opt/homebrew/opt/libpq/bin:$PATH"
export PATH="/opt/homebrew/opt/sqlite/bin:$PATH"
export PATH="$HOME/.config/emacs/bin:$PATH"
export PATH="$HOME/.emacs.d/bin:$PATH"
export PATH="$HOME/.cargo/bin:$PATH"
export PATH="$(go env GOPATH)/bin:$PATH"

# ============================================================================
# ENVIRONMENT VARIABLES
# ============================================================================
export EDITOR="nvim"
export VISUAL="nvim"

# SQLite configuration
export LDFLAGS="-L/opt/homebrew/opt/sqlite/lib"
export CPPFLAGS="-I/opt/homebrew/opt/sqlite/include"
export PKG_CONFIG_PATH="/opt/homebrew/opt/sqlite/lib/pkgconfig"

# ============================================================================
# ALIASES
# ============================================================================
alias pip='pip3'
alias python='python3'
alias cat='bat'
alias cd="z"
alias ls="eza --icons=always"
alias v="nvim"

# ============================================================================
# LAZY LOADING FUNCTIONS (for better startup performance)
# ============================================================================

# Lazy load NVM (significantly improves startup time)
lazy_load_nvm() {
    unset -f nvm node npm npx
    export NVM_DIR="$HOME/.nvm"
    [ -s "/opt/homebrew/opt/nvm/nvm.sh" ] && \. "/opt/homebrew/opt/nvm/nvm.sh"
    [ -s "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm" ] && \. "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm"
}

# Create placeholder functions that will trigger lazy loading
nvm() { lazy_load_nvm; nvm "$@"; }
node() { lazy_load_nvm; node "$@"; }
npm() { lazy_load_nvm; npm "$@"; }
npx() { lazy_load_nvm; npx "$@"; }

# Lazy load pyenv
lazy_load_pyenv() {
    export PYENV_ROOT="$HOME/.pyenv"
    [[ -d $PYENV_ROOT/bin ]] && export PATH="$PYENV_ROOT/bin:$PATH"
    eval "$(pyenv init - zsh)"
    unset -f lazy_load_pyenv
}

# Only load pyenv when needed
if command -v pyenv >/dev/null 2>&1; then
    lazy_load_pyenv
fi

# ============================================================================
# TOOL INITIALIZATIONS (optimized)
# ============================================================================

# Initialize zoxide (fast)
eval "$(zoxide init zsh)"

# Initialize starship prompt (fast)
eval "$(starship init zsh)"

# Initialize atuin (with disabled up-arrow for speed)
eval "$(atuin init zsh --disable-up-arrow)"

# ============================================================================
# FZF CONFIGURATION (simplified)
# ============================================================================
eval "$(fzf --zsh)"

# Basic FZF configuration (removed complex theming for speed)
export FZF_DEFAULT_COMMAND="fd --hidden --strip-cwd-prefix --exclude .git"
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
export FZF_ALT_C_COMMAND="fd --type=d --hidden --strip-cwd-prefix --exclude .git"

# ============================================================================
# UTILITY FUNCTIONS
# ============================================================================

# yazi file manager integration
function y() {
    local tmp="$(mktemp -t "yazi-cwd.XXXXXX")"
    yazi "$@" --cwd-file="$tmp"
    if cwd="$(cat -- "$tmp")" && [ -n "$cwd" ] && [ "$cwd" != "$PWD" ]; then
        builtin cd -- "$cwd"
    fi
    rm -f -- "$tmp"
}
